<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>azuer88</title><link href="https://azuer88.github.io/myblog/" rel="alternate"></link><link href="https://azuer88.github.io/myblog/feeds/all.atom.xml" rel="self"></link><id>https://azuer88.github.io/myblog/</id><updated>2017-08-01T09:50:44+08:00</updated><entry><title>Installing wxPython 4</title><link href="https://azuer88.github.io/myblog/installing-wxpython-4.html" rel="alternate"></link><published>2017-08-01T09:50:44+08:00</published><updated>2017-08-01T09:50:44+08:00</updated><author><name>Blue Cuenca</name></author><id>tag:azuer88.github.io,2017-08-01:myblog/installing-wxpython-4.html</id><summary type="html">&lt;!-- start here --&gt;

&lt;p&gt;I installed the following to get &lt;code&gt;wxpython&lt;/code&gt; installed via &lt;code&gt;pip install wxpython&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apt install libgstreamer1.0 libgstreamer1.0-dev libgstreamer-plugins-base1.0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You may need to &lt;code&gt;sudo apt install ...&lt;/code&gt;.&lt;/p&gt;</summary><category term="python"></category><category term="apt"></category><category term="install"></category></entry><entry><title>Setting up fileshackproject on CentOS 6</title><link href="https://azuer88.github.io/myblog/setting-up-fileshackproject-on-centos-6.html" rel="alternate"></link><published>2017-07-05T13:33:45+08:00</published><updated>2017-07-05T13:33:45+08:00</updated><author><name>Blue Cuenca</name></author><id>tag:azuer88.github.io,2017-07-05:myblog/setting-up-fileshackproject-on-centos-6.html</id><summary type="html">&lt;!-- start here --&gt;

&lt;p&gt;&lt;strong&gt;NB: This will install global django, DOES NOT use virtualenv.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Install the necessary packages:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;yum install mod_wsgi 
yum install python-pip
yum install git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install the correct version of django (v1.4.22)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install django\&amp;lt;1.5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(I haven't tested this with any other version of django)&lt;/p&gt;
&lt;p&gt;Create project directory (and change into)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir /opt/www/django/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Download project from github&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git git://github.com/peterkuma/fileshackproject.git 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Change owner of all these files to apache&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chown -R apache:apache /opt/www
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create the apache configuration file (in /etc/httpd/conf.d/fileshack.conf) with the following content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;WSGIScriptAlias / /opt/www/django/fileshackproject/fileshackproject/wsgi.py
WSGIPythonPath /opt/wwww/django/fileshackproject

Alias /static/ /opt/www/django/fileshackproject/static/
Alias /media/ /opt/www/django/fileshackproject/media/

&lt;span class="nt"&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class="err"&gt;/opt/www/django/fileshackproject&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;Files&lt;/span&gt; &lt;span class="err"&gt;wsgi.py&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Order deny,allow
        Allow from all
    &lt;span class="nt"&gt;&amp;lt;/Files&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(Optional) update SELinux Permissions&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;setsebool -P httpd_can_network_connect 1
chcon -R -t httpd_sys_content_t /opt/www/django
chcon -R -t httpd_sys_content_rw_t /opt/www/django
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Restart apache&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apachectl -k restart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(Optional) lastly, update Apache config, for large files&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;LimitRequestBody&lt;/code&gt; directive specifies the number of bytes the server will allow in a request body.  Change to 0 for unlimited. &lt;/p&gt;
&lt;p&gt;And we are done!&lt;/p&gt;</summary><category term="filedrop"></category><category term="centos"></category><category term="apache"></category><category term="configure"></category><category term="setup"></category><category term="mod_wsgi"></category></entry><entry><title>Dual Power Supply for Arduino Nano and nRF24L01+ Module</title><link href="https://azuer88.github.io/myblog/dual-power-supply-for-arduino-nano-and-nrf24l01-module.html" rel="alternate"></link><published>2017-03-17T15:44:32+08:00</published><updated>2017-03-17T15:44:32+08:00</updated><author><name>Blue Cuenca</name></author><id>tag:azuer88.github.io,2017-03-17:myblog/dual-power-supply-for-arduino-nano-and-nrf24l01-module.html</id><summary type="html">&lt;p&gt;This is my version of a dual power supply for arduino and the nRF24L01+ transceiver module.&lt;/p&gt;
&lt;p&gt;I have read that the nRF24L01 transceiver module may behave erratically if its power supply (3.3V) is not stable.  I also have a base module for it, but I plan to only use the base module during the initial testing.&lt;/p&gt;
&lt;p&gt;If and when I use these transceiver, I would prefer minimize the number of components.  &lt;/p&gt;
&lt;p&gt;Hopefully, I can fabricate the PCB these following nights.  &lt;/p&gt;
&lt;p&gt;Most of my circuits would be through-hole, as opposed to surface mount technology/devices (SMT or SMD).&lt;/p&gt;
&lt;p&gt;&lt;img alt="DualPSUImg" src="https://azuer88.github.io/myblog/images/DualPSU.png" /&gt;&lt;/p&gt;</summary><category term="arduino"></category><category term="power-supply"></category><category term="design"></category></entry><entry><title>Designing a button array for Arduino</title><link href="https://azuer88.github.io/myblog/designing-a-button-array-for-arduino.html" rel="alternate"></link><published>2017-03-15T10:37:08+08:00</published><updated>2017-03-15T10:37:08+08:00</updated><author><name>Blue Cuenca</name></author><id>tag:azuer88.github.io,2017-03-15:myblog/designing-a-button-array-for-arduino.html</id><summary type="html">&lt;!-- start here --&gt;

&lt;p&gt;I found &lt;a href="https://github.com/dxinteractive/AnalogMultiButton"&gt;this arduino library&lt;/a&gt; that processes buttons connected to a single analog pin.&lt;/p&gt;
&lt;p&gt;I designed a circuit that balances the interval for the values of the resistor ladder.  I hope that it would be easier to specify the values.  Instead, of reading the values, I would just specify the nominal values of 0 to 1023, with intervals of 102.&lt;/p&gt;
&lt;p&gt;I have not tested the circuit yet, but it looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="buttons_array" src="https://azuer88.github.io/myblog/images/MultiButtonsDesign-med.png" /&gt;&lt;/p&gt;</summary><category term="arduino"></category><category term="buttons"></category><category term="circuit"></category></entry><entry><title>Setup a Django Project with WebPack-ReactJS-NPM Front-End Framework Part 2</title><link href="https://azuer88.github.io/myblog/setup-a-django-project-with-webpack-reactjs-npm-frontend-framework-part-2.html" rel="alternate"></link><published>2017-03-15T09:05:00+08:00</published><updated>2017-03-15T09:05:00+08:00</updated><author><name>Blue Cuenca</name></author><id>tag:azuer88.github.io,2017-02-16:myblog/setup-a-django-project-with-webpack-reactjs-npm-frontend-framework-part-2.html</id><summary type="html">&lt;!-- start here --&gt;

&lt;p&gt;In this post, we are going to continue with setting up the environment we created in &lt;a href="https://azuer88.github.io/myblog/setup-a-django-project-with-webpack-reactjs-npm-frontend-framework.html"&gt;this post&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Setup Django project&lt;/h1&gt;
&lt;p&gt;Setup a django project, usually done with &lt;code&gt;django-admin startproject &amp;lt;project_name&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;We need to add a few things to the &lt;em&gt;settings.py&lt;/em&gt; of our new django project.&lt;/p&gt;
&lt;p&gt;First we'll add some path constants.  so add the following after the &lt;em&gt;BASE_DIR&lt;/em&gt; assignment:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Build paths for webpack and for static settings
DJANGO_DIR = os.path.dirname(os.path.abspath(__FILE__))
PROJECT_NAME = os.path.basename(DJANGO_DIR)
# I usually have django inside src/ so, root is 3 levels from this file
PROJECT_ROOT = os.path.normpath(os.path.join(DJANGO_DIR, &amp;quot;../../../&amp;quot;))
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, we'll add the &lt;code&gt;webpack_loader&lt;/code&gt; app into the &lt;code&gt;INSTALLED_APPS&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;INSTALLED_APPS = [
      ...

      `webpack_loader&amp;#39;,
]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, we'll setup the configuration for webpack loader...&lt;/p&gt;
&lt;p&gt;Append the following to (last part of) settings.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ASSETS_ROOT = os.path.join(PROJECT_ROOT, &amp;#39;src&amp;#39;, &amp;#39;assets&amp;#39;)
BUNDLES_DIR = os.path.join(ASSETS_ROOT, &amp;#39;bundles&amp;#39;, &amp;#39;&amp;#39;)  # must end with /
WEBPACK_LOADER = {
    &amp;#39;DEFAULT&amp;#39;: {
        CACHE: not DEBUG,
        &amp;#39;BUNDLE_DIR_NAME&amp;#39;: BUNDLES_DIR,
        &amp;#39;STATS_FILE&amp;#39;: os.path.join(PROJECT_ROOT, &amp;#39;webpack-stats.json&amp;#39;),
        &amp;#39;POLL_INTERVAL&amp;#39;: 0.1,
        &amp;#39;IGNORE&amp;#39;: [.+\.hot-upate.js&amp;#39;, \.+\.map&amp;#39;],
    }
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, (for the settings.py, at least) we'll change some of the above settings if debug is not enabled (production settings):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;if not DEBUG:
   BUNDLES_DIR = os.path.join(PROJECT_ROOT, &amp;#39;src&amp;#39;, static&amp;#39;, &amp;#39;bundles&amp;#39;, &amp;#39;&amp;#39;)
   WEBPACK_LOADER[&amp;#39;DEFAULT&amp;#39;].update(
      {
        &amp;#39;BUNDLE_DIR_NAME&amp;#39;: BUNDLES_DIR,
        &amp;#39;STATS_FILE&amp;#39;: os.path.join(PROJECT_ROOT, &amp;#39;webpack-stats-prod.json&amp;#39;),
      }
   )
&lt;/pre&gt;&lt;/div&gt;</summary><category term="setup"></category><category term="howto"></category><category term="django"></category><category term="webpack"></category><category term="reactjs"></category><category term="npm"></category><category term="project"></category></entry><entry><title>Setup a django project with webpack+reactjs+npm frontend framework</title><link href="https://azuer88.github.io/myblog/setup-a-django-project-with-webpack-reactjs-npm-frontend-framework.html" rel="alternate"></link><published>2017-02-15T15:22:41+08:00</published><updated>2017-02-15T15:22:41+08:00</updated><author><name>Blue Cuenca</name></author><id>tag:azuer88.github.io,2017-02-15:myblog/setup-a-django-project-with-webpack-reactjs-npm-frontend-framework.html</id><summary type="html">&lt;!-- start here --&gt;

&lt;p&gt;# Create project as usual...&lt;/p&gt;
&lt;p&gt;I usually start from &lt;a href="http://www.github.com"&gt;github&lt;/a&gt;, creating a repository, then clone that repository.&lt;/p&gt;
&lt;p&gt;After creating and cloning, create the virtual environment (see &lt;a href="http://virtualenvwrapper.readthedocs.io/en/latest/install.html"&gt;virtualenvwrapper docs&lt;/a&gt;) for more info on installing and setting it up.&lt;/p&gt;
&lt;h1&gt;Setup development tools&lt;/h1&gt;
&lt;p&gt;Install NodeJS v6.x &lt;a href="http://askubuntu.com/a/635469/334127"&gt;see here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Install global npm modules:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo npm install -g --upgrade npm
sudo npm install -g babel
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Insert the following into package.json, right after the &lt;code&gt;"homepage"&lt;/code&gt; key: &lt;em&gt;updated to use wepack 2&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &amp;quot;devDependencies&amp;quot;: {
    &amp;quot;autoprefixer&amp;quot;: &amp;quot;^6.7.6&amp;quot;,
    &amp;quot;bootstrap-loader&amp;quot;: &amp;quot;^2.0.0-beta.22&amp;quot;,
    &amp;quot;bootstrap-sass&amp;quot;: &amp;quot;^3.3.7&amp;quot;,
    &amp;quot;css-loader&amp;quot;: &amp;quot;^0.26.2&amp;quot;,
    &amp;quot;fetch-er&amp;quot;: &amp;quot;0.0.10&amp;quot;,
    &amp;quot;file-loader&amp;quot;: &amp;quot;^0.10.1&amp;quot;,
    &amp;quot;import-loader&amp;quot;: &amp;quot;^1.0.1&amp;quot;,
    &amp;quot;imports-loader&amp;quot;: &amp;quot;^0.7.1&amp;quot;,
    &amp;quot;node-sass&amp;quot;: &amp;quot;^4.5.0&amp;quot;,
    &amp;quot;raw-loader&amp;quot;: &amp;quot;^0.5.1&amp;quot;,
    &amp;quot;react&amp;quot;: &amp;quot;^15.4.2&amp;quot;,
    &amp;quot;react-bootstrap&amp;quot;: &amp;quot;^0.30.7&amp;quot;,
    &amp;quot;react-bootstrap-alert&amp;quot;: &amp;quot;^1.0.7&amp;quot;,
    &amp;quot;react-dom&amp;quot;: &amp;quot;^15.4.2&amp;quot;,
    &amp;quot;react-hot-loader&amp;quot;: &amp;quot;^1.3.1&amp;quot;,
    &amp;quot;react-placeholder&amp;quot;: &amp;quot;0.0.3&amp;quot;,
    &amp;quot;resolve-url-loader&amp;quot;: &amp;quot;^2.0.2&amp;quot;,
    &amp;quot;sass-loader&amp;quot;: &amp;quot;^6.0.2&amp;quot;,
    &amp;quot;style-loader&amp;quot;: &amp;quot;^0.13.2&amp;quot;,
    &amp;quot;url-loader&amp;quot;: &amp;quot;^0.5.8&amp;quot;,
    &amp;quot;webpack&amp;quot;: &amp;quot;^2.2.1&amp;quot;,
    &amp;quot;webpack-dev-server&amp;quot;: &amp;quot;^2.4.1&amp;quot;
  },
  &amp;quot;dependencies&amp;quot;: {}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;npm install
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Install Django and webpack for Django&lt;/h1&gt;
&lt;p&gt;Run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install django django-webpack-loader
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Everything we need is now installed.... it is time to get our hands dirty.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://azuer88.github.io/myblog/setup-a-django-project-with-webpack-reactjs-npm-frontend-framework-part-2.html"&gt;&lt;strong&gt;&lt;em&gt;To be Continued&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</summary><category term="setup"></category><category term="howto"></category><category term="django"></category><category term="webpack"></category><category term="npm"></category><category term="reactjs"></category><category term="project"></category></entry><entry><title>Funny how the world turns</title><link href="https://azuer88.github.io/myblog/funny-how-the-world-turns.html" rel="alternate"></link><published>2016-10-14T08:24:54+08:00</published><updated>2016-10-14T08:24:54+08:00</updated><author><name>Blue Cuenca</name></author><id>tag:azuer88.github.io,2016-10-14:myblog/funny-how-the-world-turns.html</id><summary type="html">&lt;p&gt;Funny how the world turns.  It turns and turns.  It doesn't care if it brings you up or down.  It turns and turns.  It doesn't care if it uplifts or crushes you.   Still it turns and turns.  Won't matter what you want, what you desperately need.  It turns and turns.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;You can't make it stop.  You can't get off.  You can't do anything but ride it out.&lt;/p&gt;
&lt;p&gt;So why is it funny?  &lt;/p&gt;
&lt;p&gt;Funny how most everyone is asleep.  Funny how they are unable to see beyond the dream they are living in.  Funny how they pity.  Funny how they spend their life in their dream.  Oh, how happily do they march to the tune of their own lullaby.  &lt;/p&gt;
&lt;p&gt;Is ignorance bliss?  &lt;/p&gt;
&lt;p&gt;Sometimes, I wish I was ignorant, but only for that single eye blink.  I can never be a sheep.  I can not live in a box, no matter how pretty it is painted.  &lt;/p&gt;
&lt;p&gt;Are you awake? &lt;/p&gt;
&lt;p&gt;It is funny and tragic, isn't it?  How the world turns.&lt;/p&gt;</summary><category term="rants"></category></entry><entry><title>How to rename all files to lowercase</title><link href="https://azuer88.github.io/myblog/how-to-rename-all-files-to-lowercase.html" rel="alternate"></link><published>2016-10-12T09:14:24+08:00</published><updated>2016-10-12T09:14:24+08:00</updated><author><name>Blue Cuenca</name></author><id>tag:azuer88.github.io,2016-10-12:myblog/how-to-rename-all-files-to-lowercase.html</id><summary type="html">&lt;p&gt;How do you rename all files in the current directory to all lowercase?&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ls | while read upName; do loName=`echo "${upName}" | tr '[:upper:]' '[:lower:]'`; mv "$upName" "$loName"; done&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I had to rename all the font files to lowercase.  I found this solution &lt;a href="https://ubuntuforums.org/showthread.php?t=1336909"&gt;here&lt;/a&gt;&lt;/p&gt;</summary><category term="terminal"></category><category term="howto"></category><category term="rename"></category></entry><entry><title>My Guide for Wiring My Bike</title><link href="https://azuer88.github.io/myblog/my-guide-for-wiring-my-bike.html" rel="alternate"></link><published>2016-09-27T16:29:45+08:00</published><updated>2016-09-27T16:29:45+08:00</updated><author><name>Blue Cuenca</name></author><id>tag:azuer88.github.io,2016-09-27:myblog/my-guide-for-wiring-my-bike.html</id><summary type="html">&lt;p&gt;I have been planning to rewire my motorcycle.  This is the wiring diagram I have come up with to help me remember which is connected to which.&lt;/p&gt;
&lt;p&gt;&lt;img alt="My Wiring diagram" src="/images/motorcycle-wiring.png" /&gt;&lt;/p&gt;</summary><category term="motorcycle"></category><category term="wiring"></category><category term="guide"></category></entry><entry><title>Solved: Firefox hangs when clicking on 'Open containing folder'</title><link href="https://azuer88.github.io/myblog/solved-firefox-hangs-when-clicking-on-open-containing-folder.html" rel="alternate"></link><published>2016-09-27T13:33:34+08:00</published><updated>2016-09-27T13:33:34+08:00</updated><author><name>Blue Cuenca</name></author><id>tag:azuer88.github.io,2016-09-27:myblog/solved-firefox-hangs-when-clicking-on-open-containing-folder.html</id><summary type="html">&lt;p&gt;I have added and removed several file managers on my Linux Mint.  After a while I noticed that when I click on Firefox's "Open containing folder" in downloads, Firefox hangs.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;Actually, Firefox doesn't really hangs, as it will eventually receive the timeout from its request to open the (presumably) dead filemanager binary.&lt;/p&gt;
&lt;p&gt;I finally found how to solve it.  I ran &lt;code&gt;xdg-mime default pcmanfm.desktop inode/directory&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After that, Firefox no longer "hangs".&lt;/p&gt;</summary><category term="fixes"></category><category term="firefox"></category><category term="hangs"></category></entry><entry><title>Setting up apt-cacher-ng</title><link href="https://azuer88.github.io/myblog/Setting-up-apt-proxy.html" rel="alternate"></link><published>2016-09-16T14:51:29+08:00</published><updated>2016-09-16T14:51:29+08:00</updated><author><name>Blue Cuenca</name></author><id>tag:azuer88.github.io,2016-09-16:myblog/Setting-up-apt-proxy.html</id><summary type="html">&lt;p&gt;apt-cacher-ng needs to be told how to handle traffic using HTTPS.&lt;/p&gt;
&lt;p&gt;For most repository sources, this isn't a problem.  For some, like nodesource.com, it can cause the cacher/proxy to choke.&lt;/p&gt;
&lt;p&gt;I added this line to &lt;code&gt;acng.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PassThroughPattern&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;deb&lt;/span&gt;&lt;span class="o"&gt;\.&lt;/span&gt;&lt;span class="n"&gt;nodesource&lt;/span&gt;&lt;span class="o"&gt;\.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;to enable the nodesource source.&lt;/p&gt;</summary><category term="apt-cacher-ng"></category><category term="config"></category><category term="howto"></category></entry><entry><title>Yehey! We are up!</title><link href="https://azuer88.github.io/myblog/Yey-we-are-up.html" rel="alternate"></link><published>2016-09-11T12:04:48+08:00</published><updated>2016-09-11T12:04:48+08:00</updated><author><name>Blue Cuenca</name></author><id>tag:azuer88.github.io,2016-09-11:myblog/Yey-we-are-up.html</id><summary type="html">&lt;p&gt;I am trying out Github Pages.  &lt;/p&gt;
&lt;p&gt;I will most likely use this for my blog and update as often as I can.&lt;/p&gt;
&lt;p&gt;As I am still learning how to use Jekyll, I'll just use the defaults for now.  I'll play with the bells and whistles as I move along.&lt;/p&gt;
&lt;p&gt;I like the powerful support for code snippets.  So, I'll probably post a lot of my snippets here; and probably config settings that I am liable to forget.&lt;/p&gt;</summary><category term="status"></category><category term="update"></category></entry></feed>